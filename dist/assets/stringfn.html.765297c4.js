import{_ as a,r as t,o as p,c as e,a as n,b as o,d as c,e as l}from"./app.5eb5a3cd.js";const u={},i={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",target:"_blank",rel:"noopener noreferrer"},r=c("\u5177\u4F53\u7684\u5B57\u7B26\u4E32\u65B9\u6CD5\u8BF7\u53C2\u8003MDN"),d=l(`<hr><p><strong>\u64CD\u4F5C\u65B9\u6CD5</strong></p><p>\u6211\u4EEC\u4E5F\u53EF\u5C06\u5B57\u7B26\u4E32\u5E38\u7528\u7684\u64CD\u4F5C\u65B9\u6CD5\u5F52\u7EB3\u4E3A\u589E\u3001\u5220\u3001\u6539\u3001\u67E5\uFF0C\u9700\u8981\u77E5\u9053\u5B57\u7B26\u4E32\u7684\u7279\u70B9\u662F\u4E00\u65E6\u521B\u5EFA\u4E86\uFF0C\u5C31\u4E0D\u53EF\u53D8</p><h2 id="\u589E" tabindex="-1"><a class="header-anchor" href="#\u589E" aria-hidden="true">#</a> \u589E</h2><p>\u8FD9\u91CC\u589E\u7684\u610F\u601D\u5E76\u4E0D\u662F\u8BF4\u76F4\u63A5\u589E\u6DFB\u5185\u5BB9\uFF0C\u800C\u662F\u521B\u5EFA\u5B57\u7B26\u4E32\u7684\u4E00\u4E2A\u526F\u672C\uFF0C\u518D\u8FDB\u884C\u64CD\u4F5C</p><p>\u9664\u4E86\u5E38\u7528<code>+</code>\u4EE5\u53CA<code>\${}</code>\u8FDB\u884C\u5B57\u7B26\u4E32\u62FC\u63A5\u4E4B\u5916\uFF0C\u8FD8\u53EF\u901A\u8FC7<code>concat</code></p><h3 id="concat" tabindex="-1"><a class="header-anchor" href="#concat" aria-hidden="true">#</a> concat</h3><p><code>concat()</code>\u65B9\u6CD5\u7528\u4E8E\u5C06\u4E00\u4E2A\u6216\u591A\u4E2A\u5B57\u7B26\u4E32\u62FC\u63A5\u6210\u4E00\u4E2A\u65B0\u5B57\u7B26\u4E32\u3002 (\u4E0D\u5F71\u54CD\u539F\u5B57\u7B26\u4E32)</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> stringValue <span class="token operator">=</span> <span class="token string">&quot;hello &quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> result <span class="token operator">=</span> stringValue<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">&quot;world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;hello world&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stringValue<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;hello&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5220" tabindex="-1"><a class="header-anchor" href="#\u5220" aria-hidden="true">#</a> \u5220</h2><p>\u8FD9\u91CC\u7684\u5220\u7684\u610F\u601D\u5E76\u4E0D\u662F\u8BF4\u5220\u9664\u539F\u5B57\u7B26\u4E32\u7684\u5185\u5BB9\uFF0C\u800C\u662F\u521B\u5EFA\u5B57\u7B26\u4E32\u7684\u4E00\u4E2A\u526F\u672C\uFF0C\u518D\u8FDB\u884C\u64CD\u4F5C</p><p>\u5E38\u89C1\u7684\u6709\uFF1A</p><blockquote><ul><li>slice()</li><li>substr() \uFF08\u4E0D\u63A8\u8350\u4F7F\u7528\u5C06\u88AB\u79FB\u9664\uFF09</li><li>substring()</li></ul></blockquote><p>\u8FD9\u4E09\u4E2A\u65B9\u6CD5\u90FD\u8FD4\u56DE\u8C03\u7528\u5B83\u4EEC\u7684\u5B57\u7B26\u4E32\u7684\u4E00\u4E2A\u5B50\u5B57\u7B26\u4E32\uFF0C\u800C\u4E14\u90FD\u63A5\u6536\u4E00\u6216\u4E24\u4E2A\u53C2\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> stringValue <span class="token operator">=</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stringValue<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;lo world&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stringValue<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;lo world&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stringValue<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;lo world&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stringValue<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;lo w&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stringValue<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;lo w&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stringValue<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;lo worl&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="slice" tabindex="-1"><a class="header-anchor" href="#slice" aria-hidden="true">#</a> slice()</h3><p><strong><code>slice()</code></strong> \u65B9\u6CD5\u63D0\u53D6\u67D0\u4E2A\u5B57\u7B26\u4E32\u7684\u4E00\u90E8\u5206\uFF0C\u5E76\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u5B57\u7B26\u4E32\uFF0C\u4E14\u4E0D\u4F1A\u6539\u52A8\u539F\u5B57\u7B26\u4E32\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;The quick brown fox jumps over the lazy dog.&#39;</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">31</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// expected output: &quot;the lazy dog.&quot;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// expected output: &quot;quick brown fox&quot;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// expected output: &quot;dog.&quot;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// expected output: &quot;lazy&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="substring" tabindex="-1"><a class="header-anchor" href="#substring" aria-hidden="true">#</a> substring()</h3><p><strong><code>substring()</code></strong> \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u5B57\u7B26\u4E32\u5728\u5F00\u59CB\u7D22\u5F15\u5230\u7ED3\u675F\u7D22\u5F15\u4E4B\u95F4\u7684\u4E00\u4E2A\u5B50\u96C6\uFF0C\u6216\u4ECE\u5F00\u59CB\u7D22\u5F15\u76F4\u5230\u5B57\u7B26\u4E32\u7684\u672B\u5C3E\u7684\u4E00\u4E2A\u5B50\u96C6\u3002</p><p><strong>\u53C2\u6570</strong>\uFF1A</p><p><code>indexStart</code>:\u9700\u8981\u622A\u53D6\u7684\u7B2C\u4E00\u4E2A\u5B57\u7B26\u7684\u7D22\u5F15\uFF0C\u8BE5\u7D22\u5F15\u4F4D\u7F6E\u7684\u5B57\u7B26\u4F5C\u4E3A\u8FD4\u56DE\u7684\u5B57\u7B26\u4E32\u7684\u9996\u5B57\u6BCD\u3002</p><p><code>indexEnd</code>:\u53EF\u9009\u3002\u4E00\u4E2A 0 \u5230\u5B57\u7B26\u4E32\u957F\u5EA6\u4E4B\u95F4\u7684\u6574\u6570\uFF0C\u4EE5\u8BE5\u6570\u5B57\u4E3A\u7D22\u5F15\u7684\u5B57\u7B26\u4E0D\u5305\u542B\u5728\u622A\u53D6\u7684\u5B57\u7B26\u4E32\u5185\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> anyString <span class="token operator">=</span> <span class="token string">&quot;Mozilla&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// \u8F93\u51FA &quot;Moz&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>anyString<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>anyString<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>anyString<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>anyString<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>anyString<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>anyString<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6539" tabindex="-1"><a class="header-anchor" href="#\u6539" aria-hidden="true">#</a> \u6539</h2><p>\u8FD9\u91CC\u6539\u7684\u610F\u601D\u4E5F<strong>\u4E0D\u662F\u6539\u53D8\u539F\u5B57\u7B26\u4E32</strong>\uFF0C\u800C\u662F\u521B\u5EFA\u5B57\u7B26\u4E32\u7684\u4E00\u4E2A\u526F\u672C\uFF0C\u518D\u8FDB\u884C\u64CD\u4F5C</p><p>\u5E38\u89C1\u7684\u6709\uFF1A</p><blockquote><ul><li>trim()\u3001trimLeft()\u3001trimRight()</li><li>repeat()</li><li>padStart()\u3001padEnd()</li><li>toLowerCase()\u3001 toUpperCase()</li></ul></blockquote><h3 id="trim-\u3001trimstart-\u3001trimend" tabindex="-1"><a class="header-anchor" href="#trim-\u3001trimstart-\u3001trimend" aria-hidden="true">#</a> trim()\u3001trimStart()\u3001trimEnd()</h3><p><strong><code>trim()</code></strong> \u65B9\u6CD5\u4F1A\u4ECE\u4E00\u4E2A\u5B57\u7B26\u4E32\u7684\u4E24\u7AEF\u5220\u9664\u7A7A\u767D\u5B57\u7B26\u3002</p><p><code>trimStart()</code> \u65B9\u6CD5\u4ECE\u5B57\u7B26\u4E32\u7684\u5F00\u5934\u5220\u9664\u7A7A\u683C\u3002<code>trimLeft()</code> \u662F\u6B64\u65B9\u6CD5\u7684\u522B\u540D\u3002</p><p><code>trimEnd()</code> \u65B9\u6CD5\u4ECE\u4E00\u4E2A\u5B57\u7B26\u4E32\u7684\u672B\u7AEF\u79FB\u9664\u7A7A\u767D\u5B57\u7B26\u3002<code>trimRight() </code>\u662F\u8FD9\u4E2A\u65B9\u6CD5\u7684\u522B\u540D\u3002</p><p>\u5220\u9664\u524D\u3001\u540E\u6216\u524D\u540E\u6240\u6709\u7A7A\u683C\u7B26\uFF0C\u518D\u8FD4\u56DE\u65B0\u7684\u5B57\u7B26\u4E32</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> greeting <span class="token operator">=</span> <span class="token string">&#39;   Hello world!   &#39;</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>greeting<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// expected output: &quot;   Hello world!   &quot;;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>greeting<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// expected output: &quot;Hello world!&quot;;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="repeat" tabindex="-1"><a class="header-anchor" href="#repeat" aria-hidden="true">#</a> repeat()</h3><p>\u63A5\u6536\u4E00\u4E2A\u6574\u6570\u53C2\u6570\uFF0C\u8868\u793A\u8981\u5C06\u5B57\u7B26\u4E32\u590D\u5236\u591A\u5C11\u6B21\uFF0C\u7136\u540E\u8FD4\u56DE\u62FC\u63A5\u6240\u6709\u526F\u672C\u540E\u7684\u7ED3\u679C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> stringValue <span class="token operator">=</span> <span class="token string">&quot;na &quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> copyResult <span class="token operator">=</span> stringValue<span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// na na </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="padstart-\u3001padend" tabindex="-1"><a class="header-anchor" href="#padstart-\u3001padend" aria-hidden="true">#</a> padStart()\u3001padEnd()</h3><p><strong><code>padStart()</code></strong> \u65B9\u6CD5\u7528\u53E6\u4E00\u4E2A\u5B57\u7B26\u4E32\u586B\u5145\u5F53\u524D\u5B57\u7B26\u4E32\uFF08\u5982\u679C\u9700\u8981\u7684\u8BDD\uFF0C\u4F1A\u91CD\u590D\u591A\u6B21\uFF09\uFF0C\u4EE5\u4FBF\u4EA7\u751F\u7684\u5B57\u7B26\u4E32\u8FBE\u5230\u7ED9\u5B9A\u7684\u957F\u5EA6\u3002\u4ECE\u5F53\u524D\u5B57\u7B26\u4E32\u7684\u5DE6\u4FA7\u5F00\u59CB\u586B\u5145\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> stringValue <span class="token operator">=</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stringValue<span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;   foo&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stringValue<span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;......foo&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>padEnd()</code></strong> \u65B9\u6CD5\u4F1A\u7528\u4E00\u4E2A\u5B57\u7B26\u4E32\u586B\u5145\u5F53\u524D\u5B57\u7B26\u4E32\uFF08\u5982\u679C\u9700\u8981\u7684\u8BDD\u5219\u91CD\u590D\u586B\u5145\uFF09\uFF0C\u8FD4\u56DE\u586B\u5145\u540E\u8FBE\u5230\u6307\u5B9A\u957F\u5EA6\u7684\u5B57\u7B26\u4E32\u3002\u4ECE\u5F53\u524D\u5B57\u7B26\u4E32\u7684\u672B\u5C3E\uFF08\u53F3\u4FA7\uFF09\u5F00\u59CB\u586B\u5145\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> str1 <span class="token operator">=</span> <span class="token string">&#39;Breaded Mushrooms&#39;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str1<span class="token punctuation">.</span><span class="token function">padEnd</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// expected output: &quot;Breaded Mushrooms........&quot;</span>
<span class="token keyword">const</span> str2 <span class="token operator">=</span> <span class="token string">&#39;200&#39;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str2<span class="token punctuation">.</span><span class="token function">padEnd</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// expected output: &quot;200  &quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tolowercase-\u3001-touppercase" tabindex="-1"><a class="header-anchor" href="#tolowercase-\u3001-touppercase" aria-hidden="true">#</a> toLowerCase()\u3001 toUpperCase()</h3><p><strong><code>toLowerCase()</code></strong> \u4F1A\u5C06\u8C03\u7528\u8BE5\u65B9\u6CD5\u7684\u5B57\u7B26\u4E32\u503C\u8F6C\u4E3A\u5C0F\u5199\u5F62\u5F0F\uFF0C\u5E76\u8FD4\u56DE\u3002</p><p><strong><code>toUpperCase()</code></strong> \u65B9\u6CD5\u5C06\u8C03\u7528\u8BE5\u65B9\u6CD5\u7684\u5B57\u7B26\u4E32\u8F6C\u4E3A\u5927\u5199\u5F62\u5F0F\u5E76\u8FD4\u56DE\uFF08\u5982\u679C\u8C03\u7528\u8BE5\u65B9\u6CD5\u7684\u503C\u4E0D\u662F\u5B57\u7B26\u4E32\u7C7B\u578B\u4F1A\u88AB\u5F3A\u5236\u8F6C\u6362\uFF09\u3002</p><p><strong>\u5927\u5C0F\u5199\u8F6C\u5316</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> stringValue <span class="token operator">=</span> <span class="token string">&quot;Hello WorlD&quot;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stringValue<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;hello world&quot; \u7EDF\u4E00\u8F6C\u5C0F\u5199</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stringValue<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;HELLO WORLD&quot; \u7EDF\u4E00\u8F6C\u5927\u5199</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u67E5" tabindex="-1"><a class="header-anchor" href="#\u67E5" aria-hidden="true">#</a> \u67E5</h2><p>\u9664\u4E86\u901A\u8FC7\u7D22\u5F15\u7684\u65B9\u5F0F\u83B7\u53D6\u5B57\u7B26\u4E32\u7684\u503C\uFF0C\u8FD8\u53EF\u901A\u8FC7\uFF1A</p><blockquote><ul><li>chatAt()</li><li>indexOf()</li><li>startWith()</li><li>includes()</li></ul></blockquote><h3 id="charat" tabindex="-1"><a class="header-anchor" href="#charat" aria-hidden="true">#</a> charAt()</h3><p>\u8FD4\u56DE\u7ED9\u5B9A\u7D22\u5F15\u4F4D\u7F6E\u7684\u5B57\u7B26\uFF0C\u7531\u4F20\u7ED9\u65B9\u6CD5\u7684\u6574\u6570\u53C2\u6570\u6307\u5B9A\uFF0C\u5982\u679C\u6CA1\u6709\u63D0\u4F9B\u7D22\u5F15\uFF0CcharAt() \u5C06\u4F7F\u7528 0\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> message <span class="token operator">=</span> <span class="token string">&quot;abcde&quot;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;c&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="indexof" tabindex="-1"><a class="header-anchor" href="#indexof" aria-hidden="true">#</a> indexOf()</h3><p>\u4ECE\u5B57\u7B26\u4E32\u5F00\u5934\u53BB\u641C\u7D22\u4F20\u5165\u7684\u5B57\u7B26\u4E32\uFF0C\u5E76\u8FD4\u56DE\u4F4D\u7F6E\uFF08\u5982\u679C\u6CA1\u627E\u5230\uFF0C\u5219\u8FD4\u56DE -1 \uFF09</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> stringValue <span class="token operator">=</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stringValue<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;o&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="startwith" tabindex="-1"><a class="header-anchor" href="#startwith" aria-hidden="true">#</a> startWith()</h3><p><strong><code>startsWith()</code></strong> \u65B9\u6CD5\u7528\u6765\u5224\u65AD\u5F53\u524D\u5B57\u7B26\u4E32\u662F\u5426\u4EE5\u53E6\u5916\u4E00\u4E2A\u7ED9\u5B9A\u7684\u5B50\u5B57\u7B26\u4E32\u5F00\u5934\uFF0C\u5E76\u6839\u636E\u5224\u65AD\u7ED3\u679C\u8FD4\u56DE <code>true</code> \u6216 <code>false</code>\u3002\uFF08\u540E\u9762\u7684\u53C2\u6570\u4E3A\u641C\u7D22\u5F00\u59CB\u7684\u4F4D\u7F6E\uFF09</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> str1 <span class="token operator">=</span> <span class="token string">&#39;Saturday night plans&#39;</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str1<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;Sat&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// expected output: true</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str1<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;Sat&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// expected output: false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="includes" tabindex="-1"><a class="header-anchor" href="#includes" aria-hidden="true">#</a> includes()</h3><p><strong><code>includes()</code></strong> \u65B9\u6CD5\u7528\u4E8E\u5224\u65AD\u4E00\u4E2A\u5B57\u7B26\u4E32\u662F\u5426\u5305\u542B\u5728\u53E6\u4E00\u4E2A\u5B57\u7B26\u4E32\u4E2D\uFF0C\u6839\u636E\u60C5\u51B5\u8FD4\u56DE true \u6216 false\u3002</p><p><strong>\u6CE8</strong>\uFF1A\u540E\u9762\u7684\u53C2\u6570\u8868\u793A\u4ECE\u5F53\u524D\u5B57\u7B26\u4E32\u7684\u54EA\u4E2A\u7D22\u5F15\u4F4D\u7F6E\u5F00\u59CB\u641C\u5BFB\u5B50\u5B57\u7B26\u4E32\uFF0C\u9ED8\u8BA4\u503C\u4E3A <code>0</code>\u3002\uFF08\u533A\u5206\u5927\u5C0F\u5199\uFF09</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> message <span class="token operator">=</span> <span class="token string">&quot;foobarbaz&quot;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
\u533A\u5206\u5927\u5C0F\u5199
<span class="token string">&#39;Blue Whale&#39;</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;blue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//  false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u8F6C\u6362\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u8F6C\u6362\u65B9\u6CD5" aria-hidden="true">#</a> \u8F6C\u6362\u65B9\u6CD5</h2><h3 id="split" tabindex="-1"><a class="header-anchor" href="#split" aria-hidden="true">#</a> split</h3><p><code>split</code>\u65B9\u6CD5\u628A\u5B57\u7B26\u4E32\u6309\u7167\u6307\u5B9A\u7684\u5206\u5272\u7B26\uFF0C<strong>\u62C6\u5206\u6210\u6570\u7EC4</strong>\u4E2D\u7684\u6BCF\u4E00\u9879</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&quot;12+23+34&quot;</span>
<span class="token keyword">let</span> arr <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;+&quot;</span><span class="token punctuation">)</span> <span class="token comment">// [12,23,34]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6A21\u677F\u5339\u914D\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6A21\u677F\u5339\u914D\u65B9\u6CD5" aria-hidden="true">#</a> \u6A21\u677F\u5339\u914D\u65B9\u6CD5</h2><p>\u9488\u5BF9\u6B63\u5219\u8868\u8FBE\u5F0F\uFF0C\u5B57\u7B26\u4E32\u8BBE\u8BA1\u4E86\u51E0\u4E2A\u65B9\u6CD5\uFF1A</p><blockquote><ul><li>match()</li><li>search()</li><li>replace()</li></ul></blockquote><h3 id="match" tabindex="-1"><a class="header-anchor" href="#match" aria-hidden="true">#</a> match()</h3><p>\u63A5\u6536\u4E00\u4E2A\u53C2\u6570\uFF0C\u53EF\u4EE5\u662F\u4E00\u4E2A\u6B63\u5219\u8868\u8FBE\u5F0F\u5B57\u7B26\u4E32\uFF0C\u4E5F\u53EF\u4EE5\u662F\u4E00\u4E2A<code>RegExp</code>\u5BF9\u8C61\uFF0C\u8FD4\u56DE\u6570\u7EC4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> text <span class="token operator">=</span> <span class="token string">&quot;cat, bat, sat, fat&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.at</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
<span class="token keyword">let</span> matches <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>matches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;cat&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="search" tabindex="-1"><a class="header-anchor" href="#search" aria-hidden="true">#</a> search()</h3><p>\u63A5\u6536\u4E00\u4E2A\u53C2\u6570\uFF0C\u53EF\u4EE5\u662F\u4E00\u4E2A\u6B63\u5219\u8868\u8FBE\u5F0F\u5B57\u7B26\u4E32\uFF0C\u4E5F\u53EF\u4EE5\u662F\u4E00\u4E2A<code>RegExp</code>\u5BF9\u8C61\uFF0C\u627E\u5230\u5219\u8FD4\u56DE\u5339\u914D\u7D22\u5F15\uFF0C\u5426\u5219\u8FD4\u56DE -1</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> text <span class="token operator">=</span> <span class="token string">&quot;cat, bat, sat, fat&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> pos <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">at</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="replace" tabindex="-1"><a class="header-anchor" href="#replace" aria-hidden="true">#</a> replace()</h3><p>\u63A5\u6536\u4E24\u4E2A\u53C2\u6570\uFF0C\u7B2C\u4E00\u4E2A\u53C2\u6570\u4E3A\u5339\u914D\u7684\u5185\u5BB9\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u4E3A\u66FF\u6362\u7684\u5143\u7D20\uFF08\u53EF\u7528\u51FD\u6570\uFF09</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> text <span class="token operator">=</span> <span class="token string">&quot;cat, bat, sat, fat&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> result <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;at&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ond&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;cond, bat, sat, fat&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,79);function k(m,v){const s=t("ExternalLinkIcon");return p(),e("div",null,[n("p",null,[n("a",i,[r,o(s)])]),d])}var b=a(u,[["render",k],["__file","stringfn.html.vue"]]);export{b as default};
